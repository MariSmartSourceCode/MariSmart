<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int WAITMAX=100;

const int shipment = 0;
const int shipper = 1;
const int carrier = 2;
const int consignee = 3;
const int pre_shipment_inspector = 4;
const int export_port_operator = 5;
const int import_port_operator = 6;

int status = 0;
const int status_created = 1;
const int status_signed = 2;
const int status_inspected = 3;
const int status_exported = 4;
const int status_departed = 5;
const int status_lost = 6;
const int status_arrived = 7;
const int status_imported = 8;
const int status_rearranged = 9;
const int status_received = 10;
const int status_claimed = 11;
const int status_closed = 12;

int quantity = 1;
int weight = 1000;
int volume = 10;
int price = 100;
int down_payment = 50;
int transportation_fee = 20;
int compensation_limit = 30;
int depart_date = 10;
int arrive_date = 30;
int sign_valid = 5;
int receive_valid = 60; 
int compensation_valid = 7; 

bool signatures[7];
int balances[7];
int escrow_thresholds[7] = {0,10,100,100,1,1,1};
int net[7];

bool is_delayed = false;
bool is_damaged = false;
bool is_lost = false;
int compensation_amount = 0;
int compensation_claimer = 0;


chan createShipment,signShipment,inspectShipment,shipmentExport,shipmentDepart,shipmentLost,shipmentArrive,shipmentImport,shipmentReceive,claimForCompensation,payCompensation,rearrangeShipment,closeShipment,cancelShipment;



clock block_timestamp;
clock waitClk;
clock depart_timeCLK;
clock arrive_timeCLK;
clock receive_timeCLK;</declaration>
	<template>
		<name>Shipment</name>
		<location id="id0" x="-238" y="-204">
			<name x="-306" y="-204">created</name>
		</location>
		<location id="id1" x="25" y="-204">
			<name x="0" y="-195">signed</name>
		</location>
		<location id="id2" x="306" y="-204">
			<name x="229" y="-204">inspected</name>
		</location>
		<location id="id3" x="-476" y="-68">
			<name x="-476" y="-102">closed</name>
		</location>
		<location id="id4" x="25" y="-68">
			<name x="-17" y="-68">lost</name>
		</location>
		<location id="id5" x="306" y="-68">
			<name x="229" y="-68">exported</name>
		</location>
		<location id="id6" x="25" y="68">
			<name x="-43" y="68">claimed</name>
		</location>
		<location id="id7" x="306" y="68">
			<name x="229" y="68">departed</name>
		</location>
		<location id="id8" x="-476" y="170">
			<name x="-476" y="144">rearranged</name>
		</location>
		<location id="id9" x="-340" y="68">
			<name x="-408" y="68">received</name>
		</location>
		<location id="id10" x="25" y="170">
			<name x="-51" y="170">imported</name>
		</location>
		<location id="id11" x="306" y="170">
			<name x="246" y="170">arrived</name>
		</location>
		<location id="id12" x="-476" y="-204">
			<name x="-467" y="-229">start</name>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-450" y="-161">closeShipment?</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-416" y="-221">createShipment?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-26" y="-153">cancelShipment?</label>
			<nail x="25" y="-136"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id3"/>
			<label kind="guard" x="-374" y="8">receive_timeCLK &gt;
 compensation_valid</label>
			<label kind="synchronisation" x="-399" y="-8">closeShipment?</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-221" y="-17">payCompensation?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="-59" y="-8">block_timestamp &lt;= 
arrive_date + compensation_valid</label>
			<label kind="synchronisation" x="-59" y="-25">claimForCompensation?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-297" y="-68">block_timestamp &gt; 
arrive_date + compensation_valid</label>
			<label kind="synchronisation" x="-297" y="-85">closeShipment?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="136" y="-34">shipmentLost?</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-535" y="34">closeShipment?</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="guard" x="-374" y="170">arrive_timeCLK &gt; receive_valid</label>
			<label kind="synchronisation" x="-374" y="153">rearrangeShipment?</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="guard" x="-212" y="68">receive_timeCLK &lt;=
 compensation_valid</label>
			<label kind="synchronisation" x="-221" y="51">claimForCompensation?</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="-314" y="127">arrive_timeCLK &lt;= receive_valid</label>
			<label kind="synchronisation" x="-314" y="110">shipmentReceive?</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="110" y="153">shipmentImport?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="255" y="119">shipmentArrive?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="246" y="-8">shipmentDepart?</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="187" y="-144">shipmentExport?</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="85" y="-221">inspectShipment?</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-272" y="-153">closeShipment?</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-161" y="-221">signShipment?</label>
		</transition>
	</template>
	<template>
		<name>Shipper</name>
		<declaration>const int msg_sender = shipper;
int para1;
int ret1;
void create(){
        signatures[msg_sender] = true;
        status = status_created;
        balances[msg_sender] += escrow_thresholds[msg_sender];
        net[msg_sender] -= escrow_thresholds[msg_sender];
        net[shipment] += escrow_thresholds[msg_sender];
}

void withdraw(){
        int amount = balances[msg_sender];
        balances[msg_sender] = 0;
        net[msg_sender] += amount;
        net[shipment] -= amount;
}
void close(){
        status = status_closed;
}

void cancel(){
        balances[shipper] -= transportation_fee / 2;
        balances[carrier] += transportation_fee / 2;
        status = status_closed;
}
void claim(
        int _compensation_amount
    ){
        if(_compensation_amount &gt; compensation_limit)compensation_amount = compensation_limit;
        else compensation_amount = _compensation_amount;
        compensation_claimer = msg_sender;
        status = status_claimed;
}</declaration>
		<location id="id13" x="-782" y="-442">
			<name x="-816" y="-433">idle</name>
			<label kind="invariant" x="-850" y="-416">waitClk&lt;
WAITMAX</label>
		</location>
		<location id="id14" x="-476" y="-442">
			<name x="-459" y="-442">create_called</name>
			<committed/>
		</location>
		<location id="id15" x="-476" y="-374">
			<name x="-459" y="-374">withdraw_called</name>
			<committed/>
		</location>
		<location id="id16" x="-476" y="-306">
			<name x="-459" y="-306">cancel_called</name>
			<committed/>
		</location>
		<location id="id17" x="-476" y="-221">
			<name x="-459" y="-221">claim_called</name>
			<committed/>
		</location>
		<location id="id18" x="-476" y="-136">
			<name x="-459" y="-136">close_called</name>
			<committed/>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id18"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-340" y="-170">closeShipment!</label>
			<label kind="assignment" x="-340" y="-153">waitClk=0</label>
			<nail x="-170" y="-136"/>
			<nail x="-170" y="-510"/>
			<nail x="-782" y="-510"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id18"/>
			<label kind="guard" x="-748" y="-170">status==status_created &amp;&amp;
block_timestamp &gt; sign_valid</label>
			<label kind="assignment" x="-748" y="-136">close()</label>
			<nail x="-782" y="-136"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-340" y="-255">claimForCompensation!</label>
			<label kind="assignment" x="-340" y="-238">waitClk=0</label>
			<nail x="-467" y="-221"/>
			<nail x="-170" y="-221"/>
			<nail x="-170" y="-510"/>
			<nail x="-782" y="-510"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-340" y="-340">cancelShipment!</label>
			<label kind="assignment" x="-340" y="-323">waitClk=0</label>
			<nail x="-170" y="-306"/>
			<nail x="-170" y="-510"/>
			<nail x="-782" y="-510"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id17"/>
			<label kind="select" x="-748" y="-255">i : int[1,3]</label>
			<label kind="guard" x="-671" y="-272">status == status_lost &amp;&amp; block_timestamp &lt;=
arrive_date + compensation_valid</label>
			<label kind="assignment" x="-748" y="-238">para1 = i * compensation_limit /3,
claim(para1)</label>
			<nail x="-782" y="-221"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id16"/>
			<label kind="guard" x="-748" y="-323">status == status_exported</label>
			<label kind="assignment" x="-748" y="-306">cancel()</label>
			<nail x="-782" y="-306"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-340" y="-476">createShipment!</label>
			<label kind="assignment" x="-340" y="-459">waitClk=0</label>
			<nail x="-170" y="-442"/>
			<nail x="-170" y="-510"/>
			<nail x="-782" y="-510"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id13"/>
			<label kind="assignment" x="-340" y="-391">waitClk=0</label>
			<nail x="-170" y="-374"/>
			<nail x="-170" y="-510"/>
			<nail x="-782" y="-510"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id15"/>
			<label kind="guard" x="-748" y="-408">status==status_closed &amp;&amp; 
balances[msg_sender] &gt; 0</label>
			<label kind="assignment" x="-748" y="-374">withdraw()</label>
			<nail x="-782" y="-374"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="-748" y="-476">status==0 &amp;&amp; 
signatures[msg_sender] == false</label>
			<label kind="assignment" x="-748" y="-442">create()</label>
		</transition>
	</template>
	<template>
		<name>Carrier</name>
		<declaration>const int msg_sender = carrier;
bool para1;
bool ret1;
bool sign(){
        signatures[msg_sender] = true;
        balances[msg_sender] += escrow_thresholds[msg_sender];
        net[msg_sender] -= escrow_thresholds[msg_sender];
        net[shipment] += escrow_thresholds[msg_sender];
        if (
            signatures[shipper] == true &amp;&amp;
            signatures[carrier] == true &amp;&amp;
            signatures[consignee] == true &amp;&amp;
            signatures[pre_shipment_inspector] == true &amp;&amp;
            signatures[export_port_operator] == true &amp;&amp;
            signatures[import_port_operator] == true
        ) {
            status = status_signed;  
            return true;
        }
        else return false;
}
void withdraw(){
        int amount = balances[msg_sender];
        balances[msg_sender] = 0;
        net[msg_sender] += amount;
        net[shipment] -= amount;
}
void close(){
        status = status_closed;
}
void depart(){
        balances[consignee] -= down_payment;
        balances[shipper] += down_payment;
        status = status_departed;
}
void reportLoss(){
        status = status_lost;
        is_lost = true;
}
void arrive(bool _is_delayed){
        balances[shipper] -= transportation_fee;
        balances[carrier] += transportation_fee;
        is_delayed = _is_delayed;
        status = status_arrived;
}
void reportDamage(){
        is_damaged = true;
}
void compensate(){
        balances[carrier] -= compensation_amount;
        balances[compensation_claimer] += compensation_amount;
        compensation_amount = 0;
        status = status_closed;
}
void rearrange(){
        status = status_rearranged;
}</declaration>
		<location id="id19" x="-782" y="-442">
			<name x="-816" y="-433">idle</name>
			<label kind="invariant" x="-850" y="-416">waitClk&lt;
WAITMAX</label>
		</location>
		<location id="id20" x="-136" y="-442">
			<name x="-119" y="-442">sign_called</name>
			<committed/>
		</location>
		<location id="id21" x="-136" y="-374">
			<name x="-119" y="-374">withdraw_called</name>
			<committed/>
		</location>
		<location id="id22" x="-136" y="-306">
			<name x="-119" y="-306">close_called</name>
			<committed/>
		</location>
		<location id="id23" x="-136" y="-170">
			<name x="-119" y="-170">depart_called</name>
			<committed/>
		</location>
		<location id="id24" x="-136" y="-102">
			<name x="-127" y="-102">reportLoss_called</name>
			<committed/>
		</location>
		<location id="id25" x="-136" y="-34">
			<name x="-127" y="-34">reportDamage_called</name>
			<committed/>
		</location>
		<location id="id26" x="-136" y="34">
			<name x="-127" y="34">arrive_called</name>
			<committed/>
		</location>
		<location id="id27" x="-136" y="170">
			<name x="-119" y="170">rearrange_called</name>
			<committed/>
		</location>
		<location id="id28" x="-136" y="238">
			<name x="-119" y="238">compensate_called</name>
			<committed/>
		</location>
		<init ref="id19"/>
		<transition>
			<source ref="id19"/>
			<target ref="id26"/>
			<label kind="guard" x="-748" y="85">status==status_departed &amp;&amp; block_timestamp &lt;= arrive_date</label>
			<label kind="assignment" x="-748" y="102">arrive(false)</label>
			<nail x="-782" y="102"/>
			<nail x="-136" y="102"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id22"/>
			<label kind="guard" x="-748" y="-255">status == status_rearranged</label>
			<label kind="assignment" x="-748" y="-238">close()</label>
			<nail x="-782" y="-238"/>
			<nail x="-136" y="-238"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id22"/>
			<label kind="guard" x="-748" y="-289">(receive_timeCLK &gt; compensation_valid &amp;&amp;status == status_received)</label>
			<label kind="assignment" x="-748" y="-272">close()</label>
			<nail x="-782" y="-272"/>
			<nail x="-136" y="-272"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="0" y="204">payCompensation!</label>
			<label kind="assignment" x="0" y="221">waitClk=0</label>
			<nail x="170" y="238"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="0" y="153">rearrangeShipment!</label>
			<label kind="assignment" x="0" y="170">waitClk=0</label>
			<nail x="170" y="170"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="0" y="17">shipmentArrive!</label>
			<label kind="assignment" x="0" y="34">waitClk=0,
arrive_timeCLK=0</label>
			<nail x="170" y="34"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id19"/>
			<label kind="assignment" x="0" y="-51">waitClk=0</label>
			<nail x="170" y="-34"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="0" y="-119">shipmentLost!</label>
			<label kind="assignment" x="0" y="-102">waitClk=0</label>
			<nail x="170" y="-102"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id28"/>
			<label kind="guard" x="-748" y="187">status==status_claimed
&amp;&amp; compensation_amount &gt;= 0
&amp;&amp; balances[carrier] &gt;= compensation_amount</label>
			<label kind="assignment" x="-748" y="238">compensate()</label>
			<nail x="-782" y="238"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id27"/>
			<label kind="guard" x="-748" y="136">status==status_imported 
&amp;&amp; arrive_timeCLK &gt; receive_valid</label>
			<label kind="assignment" x="-748" y="170">rearrange()</label>
			<nail x="-782" y="170"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id26"/>
			<label kind="guard" x="-748" y="17">status==status_departed &amp;&amp; block_timestamp &gt; arrive_date</label>
			<label kind="assignment" x="-748" y="34">arrive(true)</label>
			<nail x="-782" y="34"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id25"/>
			<label kind="guard" x="-748" y="-51">status==status_departed &amp;&amp; is_damaged==false</label>
			<label kind="assignment" x="-748" y="-34">reportDamage()</label>
			<nail x="-782" y="-34"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id24"/>
			<label kind="guard" x="-748" y="-119">status==status_departed</label>
			<label kind="assignment" x="-748" y="-102">reportLoss()</label>
			<nail x="-782" y="-102"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="guard" x="0" y="-561">ret1==true</label>
			<label kind="synchronisation" x="0" y="-544">signShipment!</label>
			<label kind="assignment" x="0" y="-527">waitClk=0</label>
			<nail x="-136" y="-510"/>
			<nail x="170" y="-510"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="0" y="-221">shipmentDepart!</label>
			<label kind="assignment" x="0" y="-204">waitClk=0, 
depart_timeCLK=0</label>
			<nail x="-127" y="-170"/>
			<nail x="170" y="-170"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="0" y="-340">closeShipment!</label>
			<label kind="assignment" x="0" y="-323">waitClk=0</label>
			<nail x="170" y="-306"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id23"/>
			<label kind="guard" x="-748" y="-187">status == status_exported</label>
			<label kind="assignment" x="-748" y="-170">depart()</label>
			<nail x="-782" y="-170"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id22"/>
			<label kind="guard" x="-748" y="-323">(block_timestamp &gt; arrive_date + compensation_valid &amp;&amp;status == status_lost)</label>
			<label kind="assignment" x="-748" y="-306">close()</label>
			<nail x="-782" y="-306"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="guard" x="0" y="-476">ret1 == false</label>
			<label kind="assignment" x="0" y="-459">waitClk=0</label>
			<nail x="170" y="-442"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id19"/>
			<label kind="assignment" x="0" y="-391">waitClk=0</label>
			<nail x="170" y="-374"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id21"/>
			<label kind="guard" x="-748" y="-408">status==status_closed &amp;&amp; 
balances[msg_sender] &gt; 0</label>
			<label kind="assignment" x="-748" y="-374">withdraw()</label>
			<nail x="-782" y="-374"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="-748" y="-476">status==status_created &amp;&amp; 
signatures[msg_sender] == false</label>
			<label kind="assignment" x="-748" y="-442">ret1 = sign()</label>
		</transition>
	</template>
	<template>
		<name>Consignee</name>
		<declaration>const int msg_sender = consignee;
bool para1;
int para2;
bool ret1;
bool sign(){
        signatures[msg_sender] = true;
        balances[msg_sender] += escrow_thresholds[msg_sender];
        net[msg_sender] -= escrow_thresholds[msg_sender];
        net[shipment] += escrow_thresholds[msg_sender];
        if (
            signatures[shipper] == true &amp;&amp;
            signatures[carrier] == true &amp;&amp;
            signatures[consignee] == true &amp;&amp;
            signatures[pre_shipment_inspector] == true &amp;&amp;
            signatures[export_port_operator] == true &amp;&amp;
            signatures[import_port_operator] == true
        ) {
            status = status_signed;  
            return true;
        }
        else return false;
}
void withdraw(){
        int amount = balances[msg_sender];
        balances[msg_sender] = 0;
        net[msg_sender] += amount;
        net[shipment] -= amount;
}
void receiveShipment(bool _is_damaged){
        is_damaged = _is_damaged;
        balances[consignee] -= price - down_payment;
        balances[shipper] += price - down_payment;
        status = status_received;
}

void claim(
        int _compensation_amount
    )  {
        if(_compensation_amount &gt; compensation_limit)compensation_amount = compensation_limit;
        else compensation_amount = _compensation_amount;
        compensation_claimer = msg_sender;
        status = status_claimed;
}</declaration>
		<location id="id29" x="-782" y="-442">
			<name x="-816" y="-433">idle</name>
			<label kind="invariant" x="-850" y="-416">waitClk&lt;
WAITMAX</label>
		</location>
		<location id="id30" x="-136" y="-442">
			<name x="-119" y="-442">sign_called</name>
			<committed/>
		</location>
		<location id="id31" x="-136" y="-374">
			<name x="-119" y="-374">withdraw_called</name>
			<committed/>
		</location>
		<location id="id32" x="-136" y="-306">
			<name x="-119" y="-306">receiveShipment_called</name>
			<committed/>
		</location>
		<location id="id33" x="-136" y="-204">
			<name x="-119" y="-204">claim_called</name>
			<committed/>
		</location>
		<init ref="id29"/>
		<transition>
			<source ref="id30"/>
			<target ref="id29"/>
			<label kind="guard" x="0" y="-561">ret1==true</label>
			<label kind="synchronisation" x="0" y="-544">signShipment!</label>
			<label kind="assignment" x="0" y="-527">waitClk=0</label>
			<nail x="-136" y="-510"/>
			<nail x="170" y="-510"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="0" y="-238">claimForCompensation!</label>
			<label kind="assignment" x="0" y="-221">waitClk=0</label>
			<nail x="-127" y="-204"/>
			<nail x="170" y="-204"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="0" y="-357">shipmentReceive!</label>
			<label kind="assignment" x="0" y="-340">waitClk=0,
receive_timeCLK=0</label>
			<nail x="170" y="-306"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id33"/>
			<label kind="select" x="-748" y="-255">i : int[1,3]</label>
			<label kind="guard" x="-748" y="-238">status == status_received &amp;&amp; (is_delayed || is_damaged)
&amp;&amp; receive_timeCLK&lt;=compensation_valid</label>
			<label kind="assignment" x="-748" y="-204">para2 = i * compensation_limit /3,
claim(para2)</label>
			<nail x="-782" y="-204"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id32"/>
			<label kind="select" x="-748" y="-357">i:int[0,1]</label>
			<label kind="guard" x="-748" y="-340">status==status_imported
&amp;&amp; arrive_timeCLK&lt;=receive_valid</label>
			<label kind="assignment" x="-748" y="-306">para1=i,
receiveShipment(para1)</label>
			<nail x="-782" y="-306"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id29"/>
			<label kind="guard" x="0" y="-476">ret1 == false</label>
			<label kind="assignment" x="0" y="-459">waitClk=0</label>
			<nail x="170" y="-442"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id29"/>
			<label kind="assignment" x="0" y="-391">waitClk=0</label>
			<nail x="170" y="-374"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id31"/>
			<label kind="guard" x="-748" y="-408">status==status_closed &amp;&amp; 
balances[msg_sender] &gt; 0</label>
			<label kind="assignment" x="-748" y="-374">withdraw()</label>
			<nail x="-782" y="-374"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="guard" x="-748" y="-476">status==status_created &amp;&amp; 
signatures[msg_sender] == false</label>
			<label kind="assignment" x="-748" y="-442">ret1 = sign()</label>
		</transition>
	</template>
	<template>
		<name>PreShipmentInspector</name>
		<declaration>const int msg_sender = pre_shipment_inspector;
bool para1;
bool ret1;
bool sign(){
        signatures[msg_sender] = true;
        balances[msg_sender] += escrow_thresholds[msg_sender];
        net[msg_sender] -= escrow_thresholds[msg_sender];
        net[shipment] += escrow_thresholds[msg_sender];
        if (
            signatures[shipper] == true &amp;&amp;
            signatures[carrier] == true &amp;&amp;
            signatures[consignee] == true &amp;&amp;
            signatures[pre_shipment_inspector] == true &amp;&amp;
            signatures[export_port_operator] == true &amp;&amp;
            signatures[import_port_operator] == true
        ) {
            status = status_signed;  
            return true;
        }
        else return false;
}
void withdraw(){
        int amount = balances[msg_sender];
        balances[msg_sender] = 0;
        net[msg_sender] += amount;
        net[shipment] -= amount;
}
bool inspect(bool _is_passed){
        if (_is_passed == true) {
            status = status_inspected;
            return true;
        } else {
            status = status_closed;
            return false;
        }
}</declaration>
		<location id="id34" x="-646" y="-476">
			<name x="-680" y="-467">idle</name>
			<label kind="invariant" x="-714" y="-450">waitClk&lt;
WAITMAX</label>
		</location>
		<location id="id35" x="-357" y="-476">
			<name x="-340" y="-476">sign_called</name>
			<committed/>
		</location>
		<location id="id36" x="-357" y="-383">
			<name x="-340" y="-383">withdraw_called</name>
			<committed/>
		</location>
		<location id="id37" x="-357" y="-213">
			<name x="-340" y="-213">inspect_called</name>
			<committed/>
		</location>
		<init ref="id34"/>
		<transition>
			<source ref="id37"/>
			<target ref="id34"/>
			<label kind="guard" x="-340" y="-331">para1==true</label>
			<label kind="synchronisation" x="-340" y="-314">inspectShipment!</label>
			<label kind="assignment" x="-340" y="-297">waitClk=0</label>
			<nail x="-357" y="-281"/>
			<nail x="-170" y="-281"/>
			<nail x="-170" y="-612"/>
			<nail x="-646" y="-612"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="guard" x="-340" y="-595">ret1==true</label>
			<label kind="synchronisation" x="-340" y="-578">signShipment!</label>
			<label kind="assignment" x="-340" y="-561">waitClk=0</label>
			<nail x="-357" y="-544"/>
			<nail x="-170" y="-544"/>
			<nail x="-170" y="-612"/>
			<nail x="-646" y="-612"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id34"/>
			<label kind="guard" x="-340" y="-264">para1==false</label>
			<label kind="synchronisation" x="-340" y="-247">closeShipment!</label>
			<label kind="assignment" x="-340" y="-230">waitClk=0</label>
			<nail x="-170" y="-213"/>
			<nail x="-170" y="-612"/>
			<nail x="-646" y="-612"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id37"/>
			<label kind="select" x="-612" y="-247">i:int[0,1]</label>
			<label kind="guard" x="-612" y="-230">status==status_signed</label>
			<label kind="assignment" x="-612" y="-212">para1=i,
inspect(para1)</label>
			<nail x="-646" y="-213"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="guard" x="-340" y="-510">ret1 == false</label>
			<label kind="assignment" x="-340" y="-493">waitClk=0</label>
			<nail x="-170" y="-476"/>
			<nail x="-170" y="-612"/>
			<nail x="-646" y="-612"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id34"/>
			<label kind="assignment" x="-340" y="-400">waitClk=0</label>
			<nail x="-170" y="-383"/>
			<nail x="-170" y="-612"/>
			<nail x="-646" y="-612"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id36"/>
			<label kind="guard" x="-612" y="-425">status==status_closed &amp;&amp; 
balances[msg_sender] &gt; 0</label>
			<label kind="assignment" x="-612" y="-383">withdraw()</label>
			<nail x="-646" y="-383"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id35"/>
			<label kind="guard" x="-612" y="-510">status==status_created &amp;&amp; 
signatures[msg_sender] == false</label>
			<label kind="assignment" x="-612" y="-476">ret1 = sign()</label>
		</transition>
	</template>
	<template>
		<name>ExportPortOperator</name>
		<declaration>const int msg_sender = export_port_operator;
bool ret1;
bool sign(){
        signatures[msg_sender] = true;
        balances[msg_sender] += escrow_thresholds[msg_sender];
        net[msg_sender] -= escrow_thresholds[msg_sender];
        net[shipment] += escrow_thresholds[msg_sender];
        if (
            signatures[shipper] == true &amp;&amp;
            signatures[carrier] == true &amp;&amp;
            signatures[consignee] == true &amp;&amp;
            signatures[pre_shipment_inspector] == true &amp;&amp;
            signatures[export_port_operator] == true &amp;&amp;
            signatures[import_port_operator] == true
        ) {
            status = status_signed;  
            return true;
        }
        else return false;
}
void withdraw(){
        int amount = balances[msg_sender];
        balances[msg_sender] = 0;
        net[msg_sender] += amount;
        net[shipment] -= amount;
}
void exportShipment(){
        status = status_exported;
    }</declaration>
		<location id="id38" x="-782" y="-442">
			<name x="-816" y="-433">idle</name>
			<label kind="invariant" x="-850" y="-416">waitClk&lt;
WAITMAX</label>
		</location>
		<location id="id39" x="-493" y="-442">
			<name x="-476" y="-442">sign_called</name>
			<committed/>
		</location>
		<location id="id40" x="-493" y="-374">
			<name x="-476" y="-374">withdraw_called</name>
			<committed/>
		</location>
		<location id="id41" x="-493" y="-306">
			<name x="-476" y="-306">exportShipment_called</name>
			<committed/>
		</location>
		<init ref="id38"/>
		<transition>
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="guard" x="-357" y="-561">ret1==true</label>
			<label kind="synchronisation" x="-357" y="-544">signShipment!</label>
			<label kind="assignment" x="-357" y="-527">waitClk=0</label>
			<nail x="-493" y="-510"/>
			<nail x="-187" y="-510"/>
			<nail x="-187" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="-357" y="-340">shipmentExport!</label>
			<label kind="assignment" x="-357" y="-323">waitClk=0</label>
			<nail x="-187" y="-306"/>
			<nail x="-187" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id41"/>
			<label kind="guard" x="-748" y="-323">status==status_inspected</label>
			<label kind="assignment" x="-748" y="-306">exportShipment()</label>
			<nail x="-782" y="-306"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="guard" x="-357" y="-476">ret1 == false</label>
			<label kind="assignment" x="-357" y="-459">waitClk=0</label>
			<nail x="-187" y="-442"/>
			<nail x="-187" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id38"/>
			<label kind="assignment" x="-357" y="-391">waitClk=0</label>
			<nail x="-187" y="-374"/>
			<nail x="-187" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id40"/>
			<label kind="guard" x="-748" y="-408">status==status_closed &amp;&amp; 
balances[msg_sender] &gt; 0</label>
			<label kind="assignment" x="-748" y="-374">withdraw()</label>
			<nail x="-782" y="-374"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id39"/>
			<label kind="guard" x="-748" y="-476">status==status_created &amp;&amp; 
signatures[msg_sender] == false</label>
			<label kind="assignment" x="-748" y="-442">ret1 = sign()</label>
		</transition>
	</template>
	<template>
		<name>ImportPortOperator</name>
		<declaration>const int msg_sender = import_port_operator;
bool ret1;
bool sign(){
        signatures[msg_sender] = true;
        balances[msg_sender] += escrow_thresholds[msg_sender];
        net[msg_sender] -= escrow_thresholds[msg_sender];
        net[shipment] += escrow_thresholds[msg_sender];
        if (
            signatures[shipper] == true &amp;&amp;
            signatures[carrier] == true &amp;&amp;
            signatures[consignee] == true &amp;&amp;
            signatures[pre_shipment_inspector] == true &amp;&amp;
            signatures[export_port_operator] == true &amp;&amp;
            signatures[import_port_operator] == true
        ) {
            status = status_signed;  
            return true;
        }
        else return false;
}
void withdraw(){
        int amount = balances[msg_sender];
        balances[msg_sender] = 0;
        net[msg_sender] += amount;
        net[shipment] -= amount;
}
void importShipment() {
        status = status_imported;
}</declaration>
		<location id="id42" x="-782" y="-442">
			<name x="-816" y="-433">idle</name>
			<label kind="invariant" x="-850" y="-416">waitClk&lt;
WAITMAX</label>
		</location>
		<location id="id43" x="-136" y="-442">
			<name x="-119" y="-442">sign_called</name>
			<committed/>
		</location>
		<location id="id44" x="-136" y="-374">
			<name x="-119" y="-374">withdraw_called</name>
			<committed/>
		</location>
		<location id="id45" x="-136" y="-306">
			<name x="-119" y="-306">importShipment_called</name>
			<committed/>
		</location>
		<init ref="id42"/>
		<transition>
			<source ref="id43"/>
			<target ref="id42"/>
			<label kind="guard" x="0" y="-561">ret1==true</label>
			<label kind="synchronisation" x="0" y="-544">signShipment!</label>
			<label kind="assignment" x="0" y="-527">waitClk=0</label>
			<nail x="-136" y="-510"/>
			<nail x="170" y="-510"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="0" y="-340">shipmentImport!</label>
			<label kind="assignment" x="0" y="-323">waitClk=0</label>
			<nail x="170" y="-306"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id45"/>
			<label kind="guard" x="-748" y="-323">status==status_arrived</label>
			<label kind="assignment" x="-748" y="-306">importShipment()</label>
			<nail x="-782" y="-306"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id42"/>
			<label kind="guard" x="0" y="-476">ret1 == false</label>
			<label kind="assignment" x="0" y="-459">waitClk=0</label>
			<nail x="170" y="-442"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id42"/>
			<label kind="assignment" x="0" y="-391">waitClk=0</label>
			<nail x="170" y="-374"/>
			<nail x="170" y="-578"/>
			<nail x="-782" y="-578"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id44"/>
			<label kind="guard" x="-748" y="-408">status==status_closed &amp;&amp; 
balances[msg_sender] &gt; 0</label>
			<label kind="assignment" x="-748" y="-374">withdraw()</label>
			<nail x="-782" y="-374"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id43"/>
			<label kind="guard" x="-748" y="-476">status==status_created &amp;&amp; 
signatures[msg_sender] == false</label>
			<label kind="assignment" x="-748" y="-442">ret1 = sign()</label>
		</transition>
	</template>
	<system>// List one or more processes to be composed into a system.
system Shipment, Shipper, Carrier, Consignee, PreShipmentInspector, ExportPortOperator, ImportPortOperator;
</system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
